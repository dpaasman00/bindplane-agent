// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for apachedruidreceiver metrics.
type MetricsConfig struct {
	ApachedruidAverageSQLQueryBytes  MetricConfig `mapstructure:"apachedruid.average_sql_query_bytes"`
	ApachedruidAverageSQLQueryTime   MetricConfig `mapstructure:"apachedruid.average_sql_query_time"`
	ApachedruidFailedQueryCount      MetricConfig `mapstructure:"apachedruid.failed_query_count"`
	ApachedruidInterruptedQueryCount MetricConfig `mapstructure:"apachedruid.interrupted_query_count"`
	ApachedruidQueryCount            MetricConfig `mapstructure:"apachedruid.query_count"`
	ApachedruidSQLQueryCount         MetricConfig `mapstructure:"apachedruid.sql_query_count"`
	ApachedruidSuccessQueryCount     MetricConfig `mapstructure:"apachedruid.success_query_count"`
	ApachedruidTimeoutQueryCount     MetricConfig `mapstructure:"apachedruid.timeout_query_count"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		ApachedruidAverageSQLQueryBytes: MetricConfig{
			Enabled: true,
		},
		ApachedruidAverageSQLQueryTime: MetricConfig{
			Enabled: true,
		},
		ApachedruidFailedQueryCount: MetricConfig{
			Enabled: true,
		},
		ApachedruidInterruptedQueryCount: MetricConfig{
			Enabled: true,
		},
		ApachedruidQueryCount: MetricConfig{
			Enabled: true,
		},
		ApachedruidSQLQueryCount: MetricConfig{
			Enabled: true,
		},
		ApachedruidSuccessQueryCount: MetricConfig{
			Enabled: true,
		},
		ApachedruidTimeoutQueryCount: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
}

// ResourceAttributesConfig provides config for apachedruidreceiver resource attributes.
type ResourceAttributesConfig struct {
	ApachedruidService ResourceAttributeConfig `mapstructure:"apachedruid.service"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		ApachedruidService: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for apachedruidreceiver metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
